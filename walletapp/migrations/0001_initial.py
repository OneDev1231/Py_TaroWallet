# Generated by Django 4.1.4 on 2023-01-23 10:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Currencies",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text=(
                            "Cryptocurrency name represented as 1 or 2 words. e.g."
                            " Bitcoin, Ethereum"
                        ),
                        max_length=30,
                        unique=True,
                    ),
                ),
                (
                    "picture_url",
                    models.CharField(help_text="Picture url", max_length=15),
                ),
                (
                    "acronym",
                    models.CharField(
                        help_text=(
                            "Cryptocurrency acronym represented as 1 to 5 letters. e.g."
                            " ETH, BTC"
                        ),
                        max_length=5,
                        unique=True,
                    ),
                ),
                (
                    "genesis_bootstrap_info",
                    models.CharField(
                        default="",
                        help_text=(
                            "Genesis bootstrap info. Required for creating an invoice"
                        ),
                        max_length=1000,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        default="",
                        help_text=(
                            "Short description of the cryptocurrency, includes founder"
                            " contact information, explain purpose of this currency -"
                            " it is a stablecoin? a pegged coin ? "
                        ),
                        max_length=1000,
                    ),
                ),
                (
                    "internal_key",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Internal batch key of the asset if minted",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "supply",
                    models.IntegerField(
                        blank=True,
                        default=1000000,
                        help_text="Total supply of the asset if minted",
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("submitted_for_minting", "Submitted for minting"),
                            ("minting", "Minting"),
                            ("minted", "Minted"),
                        ],
                        default="",
                        help_text="Status of transaction minting",
                        max_length=50,
                    ),
                ),
                ("created_timestamp", models.DateTimeField(auto_now_add=True)),
                ("updated_timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-acronym"],
            },
        ),
        migrations.CreateModel(
            name="Transactions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "invoice_inbound",
                    models.CharField(
                        blank=True,
                        help_text="Inbound Taro invoice",
                        max_length=5000,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "invoice_outbound",
                    models.CharField(
                        blank=True,
                        help_text="Outbound Taro invoice",
                        max_length=5000,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "tx_id",
                    models.CharField(
                        blank=True,
                        help_text="Transaction ID",
                        max_length=5000,
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Transaction description",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "amount",
                    models.IntegerField(
                        default=0, help_text="Currency amount", null=True
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("user", "User Transaction"),
                            ("fee", "Fee"),
                            ("minting", "Minting transaction"),
                        ],
                        default="",
                        help_text="Transaction type",
                        max_length=50,
                    ),
                ),
                (
                    "direction",
                    models.CharField(
                        choices=[("inbound", "Inbound"), ("outbound", "Outbound")],
                        default="",
                        help_text="Transaction direction",
                        max_length=50,
                    ),
                ),
                ("created_timestamp", models.DateTimeField(auto_now_add=True)),
                ("updated_timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            (
                                "inbound_invoice_waiting_for",
                                "Waiting for inbound invoice to be generated",
                            ),
                            (
                                "inbound_invoice_generated",
                                "Inbound invoice was generated, waiting for it to"
                                " be paid",
                            ),
                            (
                                "inbound_invoice_paid",
                                "Inbound invoice was successfully paid",
                            ),
                            (
                                "outbound_invoice_received",
                                "Outbound invoice is waiting to be paid",
                            ),
                            ("outbound_invoice_paid", "Outbound invoice paid"),
                            (
                                "placeholder_fee",
                                "Placeholder fee, real amount will be added",
                            ),
                            ("fee_paid", "Fee paid"),
                            ("minting_submitted", "Currency submitted for minting"),
                            ("tx_created", "Minting transaction created"),
                            ("minted", "Minting transaction was completed"),
                            ("error", "Error"),
                        ],
                        default="",
                        help_text="Transaction status",
                        max_length=50,
                    ),
                ),
                (
                    "status_description",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Transaction status detail",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        blank=True,
                        help_text="Transaction currency",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="walletapp.currencies",
                    ),
                ),
                (
                    "fee_transaction",
                    models.ForeignKey(
                        blank=True,
                        help_text="Fee transaction",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="walletapp.transactions",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who executed the transaction",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-updated_timestamp"],
            },
        ),
        migrations.AddField(
            model_name="currencies",
            name="minting_transaction",
            field=models.ForeignKey(
                blank=True,
                help_text="Minting transaction",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="walletapp.transactions",
            ),
        ),
        migrations.AddField(
            model_name="currencies",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                help_text="Owner of the currency",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Balances",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("balance", models.IntegerField(help_text="Wallet balance")),
                (
                    "pending_balance",
                    models.IntegerField(default=0, help_text="Pending wallet balance"),
                ),
                ("created_timestamp", models.DateTimeField(auto_now_add=True)),
                ("updated_timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "currency",
                    models.ForeignKey(
                        blank=True,
                        help_text="Wallet currency",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="walletapp.currencies",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="Owner of the wallet",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "currency")},
            },
        ),
    ]
