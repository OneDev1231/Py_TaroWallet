# Generated by Django 4.1.4 on 2023-11-18 22:31

import django_s3_storage.storage
import walletapp.utils
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("walletapp", "0058_controltable_externalinfotable_and_more"),
    ]

    operations = [
        migrations.AlterField(
            model_name="currencies",
            name="picture_large",
            field=models.ImageField(
                blank=True,
                help_text="Small icon representing the asset",
                null=True,
                storage=django_s3_storage.storage.S3Storage(
                    aws_s3_bucket_name="django-images-prod"
                ),
                upload_to=walletapp.utils.get_media_path_large,
            ),
        ),
        migrations.AlterField(
            model_name="currencies",
            name="picture_orig",
            field=models.ImageField(
                blank=True,
                help_text=(
                    "Image representing the asset. Please upload a square image about"
                    " 800x800 in size. Images will be rescaled."
                ),
                null=True,
                storage=django_s3_storage.storage.S3Storage(
                    aws_s3_bucket_name="django-images-prod"
                ),
                upload_to=walletapp.utils.get_media_path_orig,
            ),
        ),
        migrations.AlterField(
            model_name="currencies",
            name="picture_small",
            field=models.ImageField(
                blank=True,
                help_text="Large icon representing the asset",
                null=True,
                storage=django_s3_storage.storage.S3Storage(
                    aws_s3_bucket_name="django-images-prod"
                ),
                upload_to=walletapp.utils.get_media_path_small,
            ),
        ),
        migrations.AlterField(
            model_name="transactions",
            name="status",
            field=models.CharField(
                choices=[
                    (
                        "lnd_inbound_invoice_waiting_for",
                        "Waiting for inbound lighting invoice to be generated",
                    ),
                    (
                        "lnd_inbound_invoice_generated",
                        "Inbound lighting invoice was generated, waiting for it to"
                        " be paid",
                    ),
                    (
                        "lnd_inbound_invoice_paid",
                        "Inbound lighting invoice was successfully paid",
                    ),
                    (
                        "lnd_outbound_invoice_received",
                        "Outbound lighting invoice is waiting to be paid",
                    ),
                    ("lnd_outbound_invoice_paid", "Outbound lighting invoice paid"),
                    (
                        "inbound_invoice_waiting_for",
                        "Waiting for inbound invoice to be generated",
                    ),
                    (
                        "inbound_invoice_generated",
                        "Inbound invoice was generated, waiting for it to be paid",
                    ),
                    ("inbound_invoice_paid", "Inbound invoice was successfully paid"),
                    (
                        "outbound_invoice_received",
                        "Outbound invoice is waiting to be paid",
                    ),
                    ("outbound_invoice_paid", "Outbound invoice paid"),
                    ("placeholder_fee", "Placeholder fee, real amount will be added"),
                    ("fee_paid", "Fee paid"),
                    ("minting_submitted", "Currency submitted for minting"),
                    ("minting", "Currency is minting"),
                    ("tx_created", "Minting transaction created"),
                    ("minted", "Minting transaction was completed"),
                    ("internal_stated", "Internal transaction submitted"),
                    ("internal_finished", "Internal transaction finished"),
                    ("exchange_started", "Exchange transaction submitted"),
                    ("exchange_finished", "Exchange transaction finished"),
                    (
                        "replaced_with_internal_transaction",
                        "This transaction was replaced with internal transaction to"
                        " save fees",
                    ),
                    ("waiting_for_meta_data", "Waiting for currency metadata"),
                    (
                        "currency_registration_finished",
                        "Registration of a new currency is finished.",
                    ),
                    ("error", "Error"),
                ],
                default="",
                help_text="Transaction status",
                max_length=50,
            ),
        ),
    ]
