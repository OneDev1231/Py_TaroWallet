# Generated by Django 4.1.4 on 2023-09-06 00:32

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("walletapp", "0043_remove_currencies_genesis_bootstrap_info_and_more"),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name="transactions",
            name="check_transaction_status_consistency",
        ),
        migrations.AlterField(
            model_name="transactions",
            name="invoice_inbound",
            field=models.CharField(
                blank=True,
                help_text="Inbound Taproot Asset invoice",
                max_length=5000,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="transactions",
            name="invoice_outbound",
            field=models.CharField(
                blank=True,
                help_text="Outbound Taproot Asset invoice",
                max_length=5000,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="transactions",
            name="status",
            field=models.CharField(
                choices=[
                    (
                        "inbound_invoice_waiting_for",
                        "Waiting for inbound invoice to be generated",
                    ),
                    (
                        "inbound_invoice_generated",
                        "Inbound invoice was generated, waiting for it to be paid",
                    ),
                    ("inbound_invoice_paid", "Inbound invoice was successfully paid"),
                    (
                        "outbound_invoice_received",
                        "Outbound invoice is waiting to be paid",
                    ),
                    ("outbound_invoice_paid", "Outbound invoice paid"),
                    ("placeholder_fee", "Placeholder fee, real amount will be added"),
                    ("fee_paid", "Fee paid"),
                    ("minting_submitted", "Currency submitted for minting"),
                    ("minting", "Currency is minting"),
                    ("tx_created", "Minting transaction created"),
                    ("minted", "Minting transaction was completed"),
                    ("internal_started", "Internal transaction submitted"),
                    ("internal_finished", "Internal transaction finished"),
                    ("exchange_started", "Exchange transaction submitted"),
                    ("exchange_finished", "Exchange transaction finished"),
                    (
                        "replaced_with_internal_transaction",
                        "This transaction was replaced with internal transaction to"
                        " save fees",
                    ),
                    ("error", "Error"),
                ],
                default="",
                help_text="Transaction status",
                max_length=50,
            ),
        ),
        migrations.AddConstraint(
            model_name="transactions",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("destination_user__isnull", True),
                        ("direction", "inbound"),
                        ("invoice_inbound__isnull", True),
                        ("invoice_outbound__isnull", True),
                        ("status", "inbound_invoice_waiting_for"),
                        ("type", "user"),
                    ),
                    models.Q(
                        ("destination_user__isnull", True),
                        ("direction", "inbound"),
                        ("invoice_inbound__isnull", False),
                        ("invoice_outbound__isnull", True),
                        ("status", "inbound_invoice_generated"),
                        ("type", "user"),
                    ),
                    models.Q(
                        ("destination_user__isnull", True),
                        ("direction", "inbound"),
                        ("invoice_inbound__isnull", False),
                        ("invoice_outbound__isnull", True),
                        ("status", "inbound_invoice_paid"),
                        ("type", "user"),
                    ),
                    models.Q(
                        ("destination_user__isnull", True),
                        ("direction", "outbound"),
                        ("invoice_inbound__isnull", True),
                        ("invoice_outbound__isnull", False),
                        ("status", "outbound_invoice_received"),
                        ("type", "user"),
                    ),
                    models.Q(
                        ("destination_user__isnull", True),
                        ("direction", "outbound"),
                        ("invoice_inbound__isnull", True),
                        ("invoice_outbound__isnull", False),
                        ("status", "outbound_invoice_paid"),
                        ("type", "user"),
                    ),
                    models.Q(
                        ("destination_user__isnull", True),
                        ("direction", "outbound"),
                        ("invoice_inbound__isnull", True),
                        ("invoice_outbound__isnull", True),
                        ("status", "placeholder_fee"),
                        ("type", "fee"),
                    ),
                    models.Q(
                        ("destination_user__isnull", True),
                        ("direction", "outbound"),
                        ("invoice_inbound__isnull", True),
                        ("invoice_outbound__isnull", True),
                        ("status", "fee_paid"),
                        ("type", "fee"),
                    ),
                    models.Q(
                        ("destination_user__isnull", True),
                        ("direction", "inbound"),
                        ("invoice_inbound__isnull", True),
                        ("invoice_outbound__isnull", True),
                        ("status", "minting_submitted"),
                        ("type", "minting"),
                    ),
                    models.Q(
                        ("destination_user__isnull", True),
                        ("direction", "inbound"),
                        ("invoice_inbound__isnull", True),
                        ("invoice_outbound__isnull", True),
                        ("status", "minting"),
                        ("type", "minting"),
                    ),
                    models.Q(
                        ("destination_user__isnull", True),
                        ("direction", "inbound"),
                        ("invoice_inbound__isnull", True),
                        ("invoice_outbound__isnull", True),
                        ("status", "tx_created"),
                        ("type", "minting"),
                    ),
                    models.Q(
                        ("destination_user__isnull", True),
                        ("direction", "inbound"),
                        ("invoice_inbound__isnull", True),
                        ("invoice_outbound__isnull", True),
                        ("status", "minted"),
                        ("type", "minting"),
                    ),
                    models.Q(
                        ("destination_user__isnull", False),
                        ("direction", "outbound"),
                        ("invoice_inbound__isnull", True),
                        ("invoice_outbound__isnull", True),
                        ("status", "internal_stated"),
                        ("type", "internal"),
                    ),
                    models.Q(
                        ("destination_user__isnull", False),
                        ("direction", "outbound"),
                        ("invoice_inbound__isnull", True),
                        ("invoice_outbound__isnull", True),
                        ("status", "internal_finished"),
                        ("type", "internal"),
                    ),
                    models.Q(
                        ("destination_user__isnull", False),
                        ("direction", "outbound"),
                        ("invoice_inbound__isnull", True),
                        ("invoice_outbound__isnull", True),
                        ("status", "exchange_started"),
                        ("type", "exchange"),
                    ),
                    models.Q(
                        ("destination_user__isnull", False),
                        ("direction", "outbound"),
                        ("invoice_inbound__isnull", True),
                        ("invoice_outbound__isnull", True),
                        ("status", "exchange_finished"),
                        ("type", "exchange"),
                    ),
                    models.Q(
                        ("destination_user__isnull", False),
                        ("direction", "inbound"),
                        ("invoice_inbound__isnull", True),
                        ("invoice_outbound__isnull", True),
                        ("status", "exchange_started"),
                        ("type", "exchange"),
                    ),
                    models.Q(
                        ("destination_user__isnull", False),
                        ("direction", "inbound"),
                        ("invoice_inbound__isnull", True),
                        ("invoice_outbound__isnull", True),
                        ("status", "exchange_finished"),
                        ("type", "exchange"),
                    ),
                    models.Q(
                        ("destination_user__isnull", True),
                        ("direction", "inbound"),
                        ("invoice_inbound__isnull", True),
                        ("invoice_outbound__isnull", False),
                        ("status", "replaced_with_internal_transaction"),
                        ("type", "user"),
                    ),
                    ("status", "error"),
                    _connector="OR",
                ),
                name="check_transaction_status_consistency",
            ),
        ),
    ]
